apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion project.targetSdkVersion

    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionName project.versionName
        vectorDrawables.useSupportLibrary = true

        buildConfigField ("String", "DEFAULT_SEARCH_ENGINE", "\"https://www.bing.com/search?q=\"")
        // see acr.browser.lightning.search.SearchEngineProvider
        buildConfigField ("int", "DEFAULT_SEARCH_ENGINE_INDEX", "1")


        // let's put the variant name and the version number into the generated apk
        android.applicationVariants.all { variant ->
            def appName
            //Check if an applicationName property is supplied; if not use the name of the parent project.
            if (project.hasProperty("applicationName")) {
                appName = applicationName
            } else {
                appName = parent.name
            }

            variant.outputs.all { output ->
                def newApkName
                //If there's no ZipAlign task it means that our artifact will be unaligned and we need to mark it as such.
                newApkName = "${appName}-${output.baseName}-${variant.versionName}.apk"
                outputFileName = new File(newApkName)
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles 'proguard-project.txt'
        }

        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles 'proguard-project.txt', 'proguard-rules-airfox.pro'
        }
    }

    flavorDimensions "product"

    productFlavors {
        lightningPlus {
            dimension "product"

            applicationId "acr.browser.lightning"
            versionCode project.versionCode_plus

            buildConfigField "boolean", "FULL_VERSION", "Boolean.parseBoolean(\"true\")"
        }

        lightningLite {
            dimension "product"

            applicationId "acr.browser.barebones"
            versionCode project.versionCode_lite

            buildConfigField "boolean", "FULL_VERSION", "Boolean.parseBoolean(\"false\")"
        }

        airfox {
            dimension "product"

            applicationId "com.mgensuite.airfox.browser2"
            versionCode 11
            versionName '1.1.0'

            // because of draw over other apps permission
            targetSdkVersion 22

            multiDexEnabled true

            resValue "string", "contact_email_address", "care@airfox.io"
            resValue "string", "contact_faq_address", "http://www.airtoken.com"

            buildConfigField ("String", "DEFAULT_SEARCH_ENGINE", "\"https://www.bing.com/search?q=\"")
            // see acr.browser.lightning.search.SearchEngineProvider
            buildConfigField ("int", "DEFAULT_SEARCH_ENGINE_INDEX", "3")

            buildConfigField "boolean", "FULL_VERSION", "Boolean.parseBoolean(\"true\")"

            // Facebook SDK
            resValue "string", "facebook_app_id", "1420943194608607"
            resValue "string", "fb_login_protocol_scheme", "fb1420943194608607"
        }
    }

    lintOptions {
        abortOnError true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    retrolambda {
        javaVersion JavaVersion.VERSION_1_6
        defaultMethods false
        incremental true
        jvmArgs '-noverify'
    }

    packagingOptions {
        exclude '.readme'
        exclude 'publicsuffixes.gz'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/LICENSE'
    }
}

dexcount {
    includeClasses = false
    includeFieldCount = false
    format = "tree"
    orderByMethodCount = true
    verbose = false
}

dependencies {
    testCompile 'junit:junit:4.12'

    // AirFox SDK
    implementation ("com.mgensuite:airfox-mobile-sdk:$airfox_lib_version") {
        exclude group: 'com.intellij', module: 'annotations'
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
        transitive = true
        changing = true
    }

    // MultiDex
    implementation 'com.android.support:multidex:1.0.2'
    androidTestImplementation 'com.android.support:multidex:1.0.2'

    // support libraries
    implementation "com.android.support:support-v4:$support_lib_version"
    implementation "com.android.support:palette-v7:$support_lib_version"
    implementation "com.android.support:appcompat-v7:$support_lib_version"
    implementation "com.android.support:design:$support_lib_version"
    implementation "com.android.support:recyclerview-v7:$support_lib_version"
    implementation "com.android.support:support-v4:$support_lib_version"

    // implementation parsing for reading mode
    implementation 'org.jsoup:jsoup:1.10.3'

    // dependency injection
    def daggerVersion = '2.11'
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    provided 'javax.annotation:jsr250-api:1.0'

    // view binding
    def butterknifeVersion = '8.8.1'
    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    // permissions
    implementation 'com.anthonycr.grant:permissions:1.1.2'

    // proxy support
    implementation 'net.i2p.android:client:0.8'

    implementation 'com.squareup.okhttp3:okhttp:3.9.0'

    // file reading
    def mezzanineVersion = '1.0.0'
    implementation "com.anthonycr.mezzanine:mezzanine:$mezzanineVersion"
    kapt "com.anthonycr.mezzanine:mezzanine-compiler:$mezzanineVersion"

    // tor proxy
    def netcipherVersion = '2.0.0-alpha1'
    implementation "info.guardianproject.netcipher:netcipher:$netcipherVersion"
    implementation "info.guardianproject.netcipher:netcipher-webkit:$netcipherVersion"

    implementation 'com.anthonycr.bonsai:bonsai:1.1.0'

    implementation 'com.anthonycr.progress:animated-progress:1.0'

    // memory leak analysis
    def leakCanaryVersion = '1.5.1'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // progress indicator
    implementation 'com.akexorcist:RoundCornerProgressBar:2.0.3'
}

apply plugin: 'com.google.gms.google-services'
